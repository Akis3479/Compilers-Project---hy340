Terminals unused in grammar

   SPACE
   LINE_COMMENT
   BLOCK_COMMENT_START
   BLOCK_COMMENT_END
   NEWLINE
   TAB


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt

    9 $@1: %empty

   10 stmt: BREAK $@1 SEMICOLON

   11 $@2: %empty

   12 stmt: CONTINUE $@2 SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTI expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr GREATER_THAN expr
   23     | expr GREATER_OR_EQUAL expr
   24     | expr LESS_THAN expr
   25     | expr LESS_OR_EQUAL expr
   26     | expr EQUALS expr
   27     | expr NOT_EQUALS expr
   28     | expr AND expr
   29     | expr OR expr
   30     | term

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   32     | MINUS expr
   33     | NOT expr
   34     | PLUS_PLUS lvalue

   35 $@3: %empty

   36 term: lvalue $@3 PLUS_PLUS
   37     | MINUS_MINUS lvalue

   38 $@4: %empty

   39 term: lvalue $@4 MINUS_MINUS
   40     | primary

   41 $@5: %empty

   42 assignexpr: lvalue $@5 ASSIGN expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   47        | const

   48 lvalue: ID

   49 $@6: %empty

   50 lvalue: LOCAL $@6 ID
   51       | SCOPE ID
   52       | member

   53 member: lvalue DOT ID
   54       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   55       | call DOT ID
   56       | call LEFT_BRACKET expr RIGHT_BRACKET

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 $@7: %empty

   59 call: lvalue $@7 callsuffix
   60     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   61 callsuffix: normcall
   62           | methodcall

   63 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   65 elist: expr elists
   66      | %empty

   67 elists: COMMA expr elists
   68       | %empty

   69 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   70          | LEFT_BRACKET indexed RIGHT_BRACKET

   71 indexed: indexedelem indexeds

   72 indexeds: COMMA indexedelem indexeds
   73         | %empty

   74 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY

   75 $@8: %empty

   76 block: LEFT_CURLY $@8 statements stmt RIGHT_CURLY
   77      | LEFT_CURLY RIGHT_CURLY

   78 funcdef: funcprefix funcargs funcbody

   79 funcprefix: FUNCTION ID
   80           | FUNCTION

   81 $@9: %empty

   82 funcargs: LEFT_PARENTHESIS $@9 idlist RIGHT_PARENTHESIS

   83 funcbody: block

   84 const: number
   85      | STRING
   86      | NIL
   87      | TRUE
   88      | FALSE

   89 number: INTCONST
   90       | REALCONST

   91 $@10: %empty

   92 idlist: ID $@10 idlists
   93       | %empty

   94 $@11: %empty

   95 idlists: COMMA ID $@11 idlists
   96        | %empty

   97 ifstmt: ifprefix stmt
   98       | ifprefix stmt elseprefix stmt

   99 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  100 elseprefix: ELSE

  101 whilestmt: whilestart whilecond stmt

  102 whilestart: WHILE

  103 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  104 $@12: %empty

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS $@12 N stmt N

  106 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  107 N: %empty

  108 M: %empty

  109 $@13: %empty

  110 returnstmt: RETURN $@13 expr SEMICOLON

  111 $@14: %empty

  112 returnstmt: RETURN $@14 SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 99
ELSE (259) 100
WHILE (260) 102
FOR (261) 106
FUNCTION (262) 79 80
RETURN (263) 110 112
BREAK (264) 10
CONTINUE (265) 12
AND (266) 28
OR (267) 29
NOT (268) 33
LOCAL (269) 50
TRUE (270) 87
FALSE (271) 88
NIL (272) 86
NOT_EQUALS (273) 27
EQUALS (274) 26
ASSIGN (275) 42
PLUS_PLUS (276) 34 36
MINUS_MINUS (277) 37 39
PLUS (278) 17
MINUS (279) 18 32
MULTI (280) 19
DIV (281) 20
MOD (282) 21
GREATER_OR_EQUAL (283) 23
LESS_OR_EQUAL (284) 25
GREATER_THAN (285) 22
LESS_THAN (286) 24
LEFT_CURLY (287) 74 76 77
RIGHT_CURLY (288) 74 76 77
LEFT_BRACKET (289) 54 56 69 70
RIGHT_BRACKET (290) 54 56 69 70
LEFT_PARENTHESIS (291) 31 46 57 60 63 64 82 99 103 106
RIGHT_PARENTHESIS (292) 31 46 57 60 63 64 82 99 103 105
SEMICOLON (293) 4 10 12 15 106 110 112
COMMA (294) 67 72 95
COLON (295) 74
SCOPE (296) 51
DOT (297) 53 55
DOUBLE_DOT (298) 64
SPACE (299)
LINE_COMMENT (300)
BLOCK_COMMENT_START (301)
BLOCK_COMMENT_END (302)
NEWLINE (303)
TAB (304)
INTCONST (305) 89
REALCONST (306) 90
STRING (307) 85
ID (308) 48 50 51 53 55 64 79 92 95
UMINUS (309)
LOWER_THAN_ELSE (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3, on right: 1 2 76
stmt (59)
    on left: 4 5 6 7 8 10 12 13 14 15, on right: 2 76 97 98 101 105
$@1 (60)
    on left: 9, on right: 10
$@2 (61)
    on left: 11, on right: 12
expr (62)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    4 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 42 54 56 65 67
    74 99 103 106 110
term (63)
    on left: 31 32 33 34 36 37 39 40, on right: 30
$@3 (64)
    on left: 35, on right: 36
$@4 (65)
    on left: 38, on right: 39
assignexpr (66)
    on left: 42, on right: 16
$@5 (67)
    on left: 41, on right: 42
primary (68)
    on left: 43 44 45 46 47, on right: 40
lvalue (69)
    on left: 48 50 51 52, on right: 34 36 37 39 42 43 53 54 59
$@6 (70)
    on left: 49, on right: 50
member (71)
    on left: 53 54 55 56, on right: 52
call (72)
    on left: 57 59 60, on right: 44 55 56 57
$@7 (73)
    on left: 58, on right: 59
callsuffix (74)
    on left: 61 62, on right: 59
normcall (75)
    on left: 63, on right: 61
methodcall (76)
    on left: 64, on right: 62
elist (77)
    on left: 65 66, on right: 57 60 63 64 69 105 106
elists (78)
    on left: 67 68, on right: 65 67
objectdef (79)
    on left: 69 70, on right: 45
indexed (80)
    on left: 71, on right: 70
indexeds (81)
    on left: 72 73, on right: 71 72
indexedelem (82)
    on left: 74, on right: 71 72
block (83)
    on left: 76 77, on right: 13 83
$@8 (84)
    on left: 75, on right: 76
funcdef (85)
    on left: 78, on right: 14 46 60
funcprefix (86)
    on left: 79 80, on right: 78
funcargs (87)
    on left: 82, on right: 78
$@9 (88)
    on left: 81, on right: 82
funcbody (89)
    on left: 83, on right: 78
const (90)
    on left: 84 85 86 87 88, on right: 47
number (91)
    on left: 89 90, on right: 84
idlist (92)
    on left: 92 93, on right: 82
$@10 (93)
    on left: 91, on right: 92
idlists (94)
    on left: 95 96, on right: 92 95
$@11 (95)
    on left: 94, on right: 95
ifstmt (96)
    on left: 97 98, on right: 5
ifprefix (97)
    on left: 99, on right: 97 98
elseprefix (98)
    on left: 100, on right: 98
whilestmt (99)
    on left: 101, on right: 6
whilestart (100)
    on left: 102, on right: 101
whilecond (101)
    on left: 103, on right: 101
forstmt (102)
    on left: 105, on right: 7
$@12 (103)
    on left: 104, on right: 105
forprefix (104)
    on left: 106, on right: 105
N (105)
    on left: 107, on right: 105
M (106)
    on left: 108, on right: 106
returnstmt (107)
    on left: 110 112, on right: 8
$@13 (108)
    on left: 109, on right: 110
$@14 (109)
    on left: 111, on right: 112


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 3

    0 $accept: program $end .

    $default  accept


State 4

   99 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49


State 5

  102 whilestart: WHILE .

    $default  reduce using rule 102 (whilestart)


State 6

  106 forprefix: FOR . LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 50


State 7

   79 funcprefix: FUNCTION . ID
   80           | FUNCTION .

    ID  shift, and go to state 51

    $default  reduce using rule 80 (funcprefix)


State 8

  110 returnstmt: RETURN . $@13 expr SEMICOLON
  112           | RETURN . $@14 SEMICOLON

    SEMICOLON  reduce using rule 111 ($@14)
    $default   reduce using rule 109 ($@13)

    $@13  go to state 52
    $@14  go to state 53


State 9

   10 stmt: BREAK . $@1 SEMICOLON

    $default  reduce using rule 9 ($@1)

    $@1  go to state 54


State 10

   12 stmt: CONTINUE . $@2 SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 55


State 11

   33 term: NOT . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 56
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 12

   50 lvalue: LOCAL . $@6 ID

    $default  reduce using rule 49 ($@6)

    $@6  go to state 57


State 13

   87 const: TRUE .

    $default  reduce using rule 87 (const)


State 14

   88 const: FALSE .

    $default  reduce using rule 88 (const)


State 15

   86 const: NIL .

    $default  reduce using rule 86 (const)


State 16

   34 term: PLUS_PLUS . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 58
    SCOPE             shift, and go to state 23
    ID                shift, and go to state 27

    lvalue  go to state 59
    member  go to state 34
    call    go to state 60


State 17

   37 term: MINUS_MINUS . lvalue

    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 58
    SCOPE             shift, and go to state 23
    ID                shift, and go to state 27

    lvalue  go to state 61
    member  go to state 34
    call    go to state 60


State 18

   32 term: MINUS . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 19

   76 block: LEFT_CURLY . $@8 statements stmt RIGHT_CURLY
   77      | LEFT_CURLY . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 63

    $default  reduce using rule 75 ($@8)

    $@8  go to state 64


State 20

   69 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   70          | LEFT_BRACKET . indexed RIGHT_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 65
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr         go to state 66
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 67
    objectdef    go to state 36
    indexed      go to state 68
    indexedelem  go to state 69
    const        go to state 40
    number       go to state 41


State 21

   31 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   46 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   60 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 7
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 70
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 71
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41


State 22

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 23

   51 lvalue: SCOPE . ID

    ID  shift, and go to state 72


State 24

   89 number: INTCONST .

    $default  reduce using rule 89 (number)


State 25

   90 number: REALCONST .

    $default  reduce using rule 90 (number)


State 26

   85 const: STRING .

    $default  reduce using rule 85 (const)


State 27

   48 lvalue: ID .

    $default  reduce using rule 48 (lvalue)


State 28

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 29

    4 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    SEMICOLON         shift, and go to state 86


State 30

   30 expr: term .

    $default  reduce using rule 30 (expr)


State 31

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 32

   40 term: primary .

    $default  reduce using rule 40 (term)


State 33

   36 term: lvalue . $@3 PLUS_PLUS
   39     | lvalue . $@4 MINUS_MINUS
   42 assignexpr: lvalue . $@5 ASSIGN expr
   43 primary: lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   59 call: lvalue . $@7 callsuffix

    LEFT_BRACKET  shift, and go to state 87
    DOT           shift, and go to state 88

    ASSIGN            reduce using rule 41 ($@5)
    PLUS_PLUS         reduce using rule 35 ($@3)
    MINUS_MINUS       reduce using rule 38 ($@4)
    LEFT_PARENTHESIS  reduce using rule 58 ($@7)
    DOUBLE_DOT        reduce using rule 58 ($@7)
    $default          reduce using rule 43 (primary)

    $@3  go to state 89
    $@4  go to state 90
    $@5  go to state 91
    $@7  go to state 92


State 34

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


State 35

   44 primary: call .
   55 member: call . DOT ID
   56       | call . LEFT_BRACKET expr RIGHT_BRACKET
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOT               shift, and go to state 95

    $default  reduce using rule 44 (primary)


State 36

   45 primary: objectdef .

    $default  reduce using rule 45 (primary)


State 37

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 38

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 39

   78 funcdef: funcprefix . funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 96

    funcargs  go to state 97


State 40

   47 primary: const .

    $default  reduce using rule 47 (primary)


State 41

   84 const: number .

    $default  reduce using rule 84 (const)


State 42

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 43

   97 ifstmt: ifprefix . stmt
   98       | ifprefix . stmt elseprefix stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    stmt        go to state 98
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 44

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 45

  101 whilestmt: whilestart . whilecond stmt

    LEFT_PARENTHESIS  shift, and go to state 99

    whilecond  go to state 100


State 46

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 47

  105 forstmt: forprefix . N elist RIGHT_PARENTHESIS $@12 N stmt N

    $default  reduce using rule 107 (N)

    N  go to state 101


State 48

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 49

   99 ifprefix: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 102
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 50

  106 forprefix: FOR LEFT_PARENTHESIS . elist SEMICOLON M expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 103
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 51

   79 funcprefix: FUNCTION ID .

    $default  reduce using rule 79 (funcprefix)


State 52

  110 returnstmt: RETURN $@13 . expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 104
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 53

  112 returnstmt: RETURN $@14 . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 54

   10 stmt: BREAK $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 55

   12 stmt: CONTINUE $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 56

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   33 term: NOT expr .

    $default  reduce using rule 33 (term)


State 57

   50 lvalue: LOCAL $@6 . ID

    ID  shift, and go to state 108


State 58

   60 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcdef     go to state 109
    funcprefix  go to state 39


State 59

   34 term: PLUS_PLUS lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   59 call: lvalue . $@7 callsuffix

    LEFT_BRACKET  shift, and go to state 87
    DOT           shift, and go to state 88

    LEFT_PARENTHESIS  reduce using rule 58 ($@7)
    DOUBLE_DOT        reduce using rule 58 ($@7)
    $default          reduce using rule 34 (term)

    $@7  go to state 92


State 60

   55 member: call . DOT ID
   56       | call . LEFT_BRACKET expr RIGHT_BRACKET
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94
    DOT               shift, and go to state 95


State 61

   37 term: MINUS_MINUS lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   59 call: lvalue . $@7 callsuffix

    LEFT_BRACKET  shift, and go to state 87
    DOT           shift, and go to state 88

    LEFT_PARENTHESIS  reduce using rule 58 ($@7)
    DOUBLE_DOT        reduce using rule 58 ($@7)
    $default          reduce using rule 37 (term)

    $@7  go to state 92


State 62

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   32 term: MINUS expr .

    $default  reduce using rule 32 (term)


State 63

   77 block: LEFT_CURLY RIGHT_CURLY .

    $default  reduce using rule 77 (block)


State 64

   76 block: LEFT_CURLY $@8 . statements stmt RIGHT_CURLY

    $default  reduce using rule 3 (statements)

    statements  go to state 110


State 65

   74 indexedelem: LEFT_CURLY . expr COLON expr RIGHT_CURLY

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 111
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 66

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   65 elist: expr . elists

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    COMMA             shift, and go to state 112

    $default  reduce using rule 68 (elists)

    elists  go to state 113


State 67

   69 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 114


State 68

   70 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 115


State 69

   71 indexed: indexedelem . indexeds

    COMMA  shift, and go to state 116

    $default  reduce using rule 73 (indexeds)

    indexeds  go to state 117


State 70

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   31 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    NOT_EQUALS         shift, and go to state 75
    EQUALS             shift, and go to state 76
    PLUS               shift, and go to state 77
    MINUS              shift, and go to state 78
    MULTI              shift, and go to state 79
    DIV                shift, and go to state 80
    MOD                shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 118


State 71

   46 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   60 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 119


State 72

   51 lvalue: SCOPE ID .

    $default  reduce using rule 51 (lvalue)


State 73

   28 expr: expr AND . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 74

   29 expr: expr OR . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 75

   27 expr: expr NOT_EQUALS . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 76

   26 expr: expr EQUALS . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 77

   17 expr: expr PLUS . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 78

   18 expr: expr MINUS . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 79

   19 expr: expr MULTI . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 80

   20 expr: expr DIV . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 81

   21 expr: expr MOD . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 128
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 82

   23 expr: expr GREATER_OR_EQUAL . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 129
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 83

   25 expr: expr LESS_OR_EQUAL . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 84

   22 expr: expr GREATER_THAN . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 131
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 85

   24 expr: expr LESS_THAN . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 132
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 86

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 87

   54 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 133
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 88

   53 member: lvalue DOT . ID

    ID  shift, and go to state 134


State 89

   36 term: lvalue $@3 . PLUS_PLUS

    PLUS_PLUS  shift, and go to state 135


State 90

   39 term: lvalue $@4 . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 136


State 91

   42 assignexpr: lvalue $@5 . ASSIGN expr

    ASSIGN  shift, and go to state 137


State 92

   59 call: lvalue $@7 . callsuffix

    LEFT_PARENTHESIS  shift, and go to state 138
    DOUBLE_DOT        shift, and go to state 139

    callsuffix  go to state 140
    normcall    go to state 141
    methodcall  go to state 142


State 93

   56 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 143
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 94

   57 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 144
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 95

   55 member: call DOT . ID

    ID  shift, and go to state 145


State 96

   82 funcargs: LEFT_PARENTHESIS . $@9 idlist RIGHT_PARENTHESIS

    $default  reduce using rule 81 ($@9)

    $@9  go to state 146


State 97

   78 funcdef: funcprefix funcargs . funcbody

    LEFT_CURLY  shift, and go to state 19

    block     go to state 147
    funcbody  go to state 148


State 98

   97 ifstmt: ifprefix stmt .
   98       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 149

    $default  reduce using rule 97 (ifstmt)

    elseprefix  go to state 150


State 99

  103 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 151
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 100

  101 whilestmt: whilestart whilecond . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    stmt        go to state 152
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 101

  105 forstmt: forprefix N . elist RIGHT_PARENTHESIS $@12 N stmt N

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 153
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 102

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   99 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    NOT_EQUALS         shift, and go to state 75
    EQUALS             shift, and go to state 76
    PLUS               shift, and go to state 77
    MINUS              shift, and go to state 78
    MULTI              shift, and go to state 79
    DIV                shift, and go to state 80
    MOD                shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 154


State 103

  106 forprefix: FOR LEFT_PARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 155


State 104

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
  110 returnstmt: RETURN $@13 expr . SEMICOLON

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    SEMICOLON         shift, and go to state 156


State 105

  112 returnstmt: RETURN $@14 SEMICOLON .

    $default  reduce using rule 112 (returnstmt)


State 106

   10 stmt: BREAK $@1 SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 107

   12 stmt: CONTINUE $@2 SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 108

   50 lvalue: LOCAL $@6 ID .

    $default  reduce using rule 50 (lvalue)


State 109

   60 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 157


State 110

    2 statements: statements . stmt
   76 block: LEFT_CURLY $@8 statements . stmt RIGHT_CURLY

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    stmt        go to state 158
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 111

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   74 indexedelem: LEFT_CURLY expr . COLON expr RIGHT_CURLY

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    COLON             shift, and go to state 159


State 112

   67 elists: COMMA . expr elists

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 160
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 113

   65 elist: expr elists .

    $default  reduce using rule 65 (elist)


State 114

   69 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 69 (objectdef)


State 115

   70 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 70 (objectdef)


State 116

   72 indexeds: COMMA . indexedelem indexeds

    LEFT_CURLY  shift, and go to state 65

    indexedelem  go to state 161


State 117

   71 indexed: indexedelem indexeds .

    $default  reduce using rule 71 (indexed)


State 118

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 31 (term)


State 119

   46 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 162

    $default  reduce using rule 46 (primary)


State 120

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   28     | expr AND expr .
   29     | expr . OR expr

    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85

    $default  reduce using rule 28 (expr)


State 121

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   29     | expr OR expr .

    AND               shift, and go to state 73
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 122

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   27     | expr NOT_EQUALS expr .
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85

    NOT_EQUALS  error (nonassociative)
    EQUALS      error (nonassociative)

    $default  reduce using rule 27 (expr)


State 123

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   26     | expr EQUALS expr .
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85

    NOT_EQUALS  error (nonassociative)
    EQUALS      error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 17 (expr)


State 125

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 18 (expr)


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   19     | expr MULTI expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 129

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   23     | expr GREATER_OR_EQUAL expr .
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   25     | expr LESS_OR_EQUAL expr .
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)

    $default  reduce using rule 25 (expr)


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   22     | expr GREATER_THAN expr .
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)

    $default  reduce using rule 22 (expr)


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   24     | expr LESS_THAN expr .
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)

    $default  reduce using rule 24 (expr)


State 133

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   54 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    RIGHT_BRACKET     shift, and go to state 163


State 134

   53 member: lvalue DOT ID .

    $default  reduce using rule 53 (member)


State 135

   36 term: lvalue $@3 PLUS_PLUS .

    $default  reduce using rule 36 (term)


State 136

   39 term: lvalue $@4 MINUS_MINUS .

    $default  reduce using rule 39 (term)


State 137

   42 assignexpr: lvalue $@5 ASSIGN . expr

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 164
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 138

   63 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 165
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 139

   64 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 166


State 140

   59 call: lvalue $@7 callsuffix .

    $default  reduce using rule 59 (call)


State 141

   61 callsuffix: normcall .

    $default  reduce using rule 61 (callsuffix)


State 142

   62 callsuffix: methodcall .

    $default  reduce using rule 62 (callsuffix)


State 143

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   56 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    RIGHT_BRACKET     shift, and go to state 167


State 144

   57 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 168


State 145

   55 member: call DOT ID .

    $default  reduce using rule 55 (member)


State 146

   82 funcargs: LEFT_PARENTHESIS $@9 . idlist RIGHT_PARENTHESIS

    ID  shift, and go to state 169

    $default  reduce using rule 93 (idlist)

    idlist  go to state 170


State 147

   83 funcbody: block .

    $default  reduce using rule 83 (funcbody)


State 148

   78 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 78 (funcdef)


State 149

  100 elseprefix: ELSE .

    $default  reduce using rule 100 (elseprefix)


State 150

   98 ifstmt: ifprefix stmt elseprefix . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    stmt        go to state 171
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 151

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
  103 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    NOT_EQUALS         shift, and go to state 75
    EQUALS             shift, and go to state 76
    PLUS               shift, and go to state 77
    MINUS              shift, and go to state 78
    MULTI              shift, and go to state 79
    DIV                shift, and go to state 80
    MOD                shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_THAN          shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 172


State 152

  101 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 101 (whilestmt)


State 153

  105 forstmt: forprefix N elist . RIGHT_PARENTHESIS $@12 N stmt N

    RIGHT_PARENTHESIS  shift, and go to state 173


State 154

   99 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 99 (ifprefix)


State 155

  106 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 108 (M)

    M  go to state 174


State 156

  110 returnstmt: RETURN $@13 expr SEMICOLON .

    $default  reduce using rule 110 (returnstmt)


State 157

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 162


State 158

    2 statements: statements stmt .
   76 block: LEFT_CURLY $@8 statements stmt . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 175

    $default  reduce using rule 2 (statements)


State 159

   74 indexedelem: LEFT_CURLY expr COLON . expr RIGHT_CURLY

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 176
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 160

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   67 elists: COMMA expr . elists

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    COMMA             shift, and go to state 112

    $default  reduce using rule 68 (elists)

    elists  go to state 177


State 161

   72 indexeds: COMMA indexedelem . indexeds

    COMMA  shift, and go to state 116

    $default  reduce using rule 73 (indexeds)

    indexeds  go to state 178


State 162

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 179
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 163

   54 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 54 (member)


State 164

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   42 assignexpr: lvalue $@5 ASSIGN expr .

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85

    $default  reduce using rule 42 (assignexpr)


State 165

   63 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 180


State 166

   64 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 181


State 167

   56 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 56 (member)


State 168

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (call)


State 169

   92 idlist: ID . $@10 idlists

    $default  reduce using rule 91 ($@10)

    $@10  go to state 182


State 170

   82 funcargs: LEFT_PARENTHESIS $@9 idlist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 183


State 171

   98 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 98 (ifstmt)


State 172

  103 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 103 (whilecond)


State 173

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS . $@12 N stmt N

    $default  reduce using rule 104 ($@12)

    $@12  go to state 184


State 174

  106 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M . expr SEMICOLON

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    expr        go to state 185
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 175

   76 block: LEFT_CURLY $@8 statements stmt RIGHT_CURLY .

    $default  reduce using rule 76 (block)


State 176

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
   74 indexedelem: LEFT_CURLY expr COLON expr . RIGHT_CURLY

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    RIGHT_CURLY       shift, and go to state 186


State 177

   67 elists: COMMA expr elists .

    $default  reduce using rule 67 (elists)


State 178

   72 indexeds: COMMA indexedelem indexeds .

    $default  reduce using rule 72 (indexeds)


State 179

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 187


State 180

   63 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (normcall)


State 181

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 188
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 182

   92 idlist: ID $@10 . idlists

    COMMA  shift, and go to state 189

    $default  reduce using rule 96 (idlists)

    idlists  go to state 190


State 183

   82 funcargs: LEFT_PARENTHESIS $@9 idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 82 (funcargs)


State 184

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS $@12 . N stmt N

    $default  reduce using rule 107 (N)

    N  go to state 191


State 185

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER_THAN expr
   23     | expr . GREATER_OR_EQUAL expr
   24     | expr . LESS_THAN expr
   25     | expr . LESS_OR_EQUAL expr
   26     | expr . EQUALS expr
   27     | expr . NOT_EQUALS expr
   28     | expr . AND expr
   29     | expr . OR expr
  106 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND               shift, and go to state 73
    OR                shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    EQUALS            shift, and go to state 76
    PLUS              shift, and go to state 77
    MINUS             shift, and go to state 78
    MULTI             shift, and go to state 79
    DIV               shift, and go to state 80
    MOD               shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83
    GREATER_THAN      shift, and go to state 84
    LESS_THAN         shift, and go to state 85
    SEMICOLON         shift, and go to state 192


State 186

   74 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY .

    $default  reduce using rule 74 (indexedelem)


State 187

   60 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 60 (call)


State 188

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 193


State 189

   95 idlists: COMMA . ID $@11 idlists

    ID  shift, and go to state 194


State 190

   92 idlist: ID $@10 idlists .

    $default  reduce using rule 92 (idlist)


State 191

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS $@12 N . stmt N

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    PLUS_PLUS         shift, and go to state 16
    MINUS_MINUS       shift, and go to state 17
    MINUS             shift, and go to state 18
    LEFT_CURLY        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    SCOPE             shift, and go to state 23
    INTCONST          shift, and go to state 24
    REALCONST         shift, and go to state 25
    STRING            shift, and go to state 26
    ID                shift, and go to state 27

    stmt        go to state 195
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    funcprefix  go to state 39
    const       go to state 40
    number      go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forprefix   go to state 47
    returnstmt  go to state 48


State 192

  106 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 106 (forprefix)


State 193

   64 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 64 (methodcall)


State 194

   95 idlists: COMMA ID . $@11 idlists

    $default  reduce using rule 94 ($@11)

    $@11  go to state 196


State 195

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS $@12 N stmt . N

    $default  reduce using rule 107 (N)

    N  go to state 197


State 196

   95 idlists: COMMA ID $@11 . idlists

    COMMA  shift, and go to state 189

    $default  reduce using rule 96 (idlists)

    idlists  go to state 198


State 197

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS $@12 N stmt N .

    $default  reduce using rule 105 (forstmt)


State 198

   95 idlists: COMMA ID $@11 idlists .

    $default  reduce using rule 95 (idlists)
